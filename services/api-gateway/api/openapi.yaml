openapi: 3.0.3
info:
  title: API Gateway
  version: 1.0.0
  description: This is a simple API Gateway that proxies requests to different services.
servers:
  - url: http://localhost:9069/api
    description: Development server

paths:
  /openapi.yaml:
    get:
      summary: Get the OpenAPI specification
      responses:
        '200':
          description: OpenAPI specification in YAML format
          content:
            application/yaml:
              schema:
                type: string
                example: "swagger: '2.0'..."

  /register:
    post:
      summary: Register a new user
      tags:
        - Auth Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful registration
        '401':
          description: Unauthorized
        '500':
          description: Failed to register

  /login:
    post:
      summary: User login
      tags:
        - Auth Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized
        '500':
          description: Failed to login

  /refreshToken:
    post:
      summary: Refresh the access token
      tags:
        - Auth Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized if the refresh token is invalid
        '500':
          description: Failed to refresh token

  /newsletters:
    post:
      summary: Create a newsletter
      tags:
        - Newsletter Management Service
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Newsletter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '401':
          description: Unauthorized if the authorization header is missing or invalid
        '500':
          description: Failed to create newsletters
    get:
      summary: List all newsletters
      tags:
        - Newsletter Management Service
      security:
        - Authorization: []
      responses:
        '200':
          description: An array of newsletters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Newsletter'
        '401':
          description: Unauthorized if the authorization header is missing or invalid
        '500':
          description: Failed to refresh newsletters

  /newsletters/{id}:
    put:
      summary: Update a newsletter
      tags:
        - Newsletter Management Service
      security:
        - Authorization: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: Newsletter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '401':
          description: Unauthorized if the authorization header is missing or invalid
        '500':
          description: Failed to update newsletter
    delete:
      summary: Delete a newsletter
      tags:
        - Newsletter Management Service
      security:
        - Authorization: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the newsletter
      responses:
        '200':
          description: Newsletter deleted
        '401':
          description: Unauthorized
        '500':
          description: Failed to delete newsletter

  /subscribers/{id}:
    get:
      summary: Get subscriber details
      tags:
        - Newsletter Management Service
      security:
        - Authorization: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the newsletter
      responses:
        '200':
          description: An array of subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
        '401':
          description: Unauthorized if the authorization header is missing or invalid
        '500':
          description: Failed to list newsletter subscribers

  /subscribe/{id}:
    post:
      summary: Subscribe to a newsletter
      tags:
        - Subscription Service
      security:
        - Authorization: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the newsletter to subscribe
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: string
                    format: uuid
                    description: Unique identifier of the created subscription
                  CreatedAt:
                    type: string
                    format: date-time
                    description: Timestamp of when the subscription was created
                  NewsletterID:
                    type: string
                    format: uuid
                    description: Identifier of the newsletter subscribed to
                  SubscriberID:
                    type: string
                    format: uuid
                    description: Identifier of the subscriber
              example:
                ID: 'de042143-6910-418e-8de4-90f6c67c7519'
                CreatedAt: '2024-05-05T20:23:35.894647Z'
                NewsletterID: 'f38a7d05-8632-4ee0-a347-8449a51ba545'
                SubscriberID: 'fda6a638-c4dd-444f-8de4-124833e85e76'
        '401':
          description: Unauthorized
        '500':
          description: Failed to subscribe to a newsletter

  /unsubscribe:
    get:
      summary: Unsubscribe from a newsletter via email sent magic link
      tags:
        - Subscription Service
      parameters:
        - in: query
          name: newsletterId
          required: true
          schema:
            type: string
            format: uuid
          description: The unique identifier of the newsletter
        - in: query
          name: userId
          required: true
          schema:
            type: string
            format: uuid
          description: The unique identifier of the user
      responses:
        '200':
          description: Unsubscribed successfully
          content:
            text/html:
              schema:
                type: string
                example: |
                  <html>
                    <head><title>Sad to see you go!</title></head>
                    <body>
                      <h1>You have been successfully unsubscribed.</h1>
                      <p>You will no longer receive newsletters from us.</p>
                    </body>
                  </html>
        '401':
          description: Unauthorized
        '500':
          description: Failed to unsubscribe from newsletter

  /posts/{id}:
    get:
      summary: List all posts in a given newsletter
      tags:
        - Publishing Service
      security:
        - Authorization: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the newsletter
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: string
                      format: uuid
                      description: Unique identifier of the post
                    CreatedAt:
                      type: string
                      format: date-time
                      description: The creation timestamp of the post
                    Title:
                      type: string
                      description: The title of the post
                    Content:
                      type: string
                      description: The content of the post
                    NewsletterID:
                      type: string
                      format: uuid
                      description: Identifier of the newsletter this post belongs to
              example:
                - ID: '8a2d8511-012d-4991-9207-d7d2b311e5b1'
                  CreatedAt: '2024-05-03T16:07:26.655033Z'
                  Title: 'Test post'
                  Content: 'Well this is a post innit'
                  NewsletterID: '49443416-2f74-4518-b6c5-b0110b43c9f4'
        '401':
          description: Unauthorized
        '500':
          description: Failed to list posts

  /posts:
    post:
      summary: Create a new post within a newsletter
      tags:
        - Publishing Service
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
                - newsletterId
              properties:
                title:
                  type: string
                  description: The title of the post
                content:
                  type: string
                  description: The content of the post
                newsletterId:
                  type: string
                  format: uuid
                  description: Unique identifier of the newsletter to which the post belongs
            example:
              title: 'Title'
              content: 'Content'
              newsletterId: 'f38a7d05-8632-4ee0-a347-8449a51ba545'
      responses:
        '200':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: string
                    format: uuid
                    description: Unique identifier of the created post
                  CreatedAt:
                    type: string
                    format: date-time
                    description: Timestamp of when the post was created
                  Title:
                    type: string
                    description: Title of the post
                  Content:
                    type: string
                    description: Content of the post
                  NewsletterID:
                    type: string
                    format: uuid
                    description: Identifier of the newsletter to which the post belongs
              example:
                ID: 'fdfbeddb-7fdc-4675-b54e-a1863d8933bb'
                CreatedAt: '2024-05-05T21:32:36.298366Z'
                Title: 'Title'
                Content: 'Content'
                NewsletterID: 'f38a7d05-8632-4ee0-a347-8449a51ba545'
        '401':
          description: Unauthorized
        '500':
          description: Failed to create post

components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Authorization header with bearer token'
  schemas:
    UserCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          default: 'bearer'
        expires_in:
          type: integer
          format: int32
        refresh_token:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refresh_token:
          type: string
    Newsletter:
      type: object
      properties:
        ID:
          type: string
          format: uuid
        CreatedAt:
          type: string
          format: date-time
        Title:
          type: string
        Description:
          type: string
        EditorID:
          type: string
          format: uuid
    Subscriber:
      type: object
      properties:
        Email:
          type: string
          format: email
